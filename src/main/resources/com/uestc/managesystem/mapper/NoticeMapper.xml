<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uestc.managesystem.mapper.NoticeMapper">
  <resultMap id="BaseResultMap" type="com.uestc.managesystem.entity.model.Notice">
    <id column="notice_ID" jdbcType="INTEGER" property="noticeId" />
    <result column="notice_organization" jdbcType="VARCHAR" property="noticeOrganization" />
    <result column="notice_time" jdbcType="DATE" property="noticeTime" />
    <result column="notice_content" jdbcType="LONGVARCHAR" property="noticeContent" />
  </resultMap>
  <sql id="Base_Column_List">
    notice_ID, notice_organization, notice_time,notice_content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from notice
    where notice_ID = #{noticeId,jdbcType=INTEGER}
  </select>
  <select id="findAll"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from notice
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from notice
    where notice_ID = #{noticeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.uestc.managesystem.entity.model.Notice">
    insert into notice (notice_ID, notice_organization, notice_time, 
      notice_content)
    values (#{noticeId,jdbcType=INTEGER}, #{noticeOrganization,jdbcType=VARCHAR}, #{noticeTime,jdbcType=DATE}, 
      #{noticeContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.uestc.managesystem.entity.model.Notice">
    insert ignore into notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="noticeId != null">
        notice_ID,
      </if>
      <if test="noticeOrganization != null and !&quot;&quot;.equals(noticeOrganization.trim())">
        notice_organization,
      </if>
      <if test="noticeTime != null ">
        notice_time,
      </if>
      <if test="noticeContent != null and !&quot;&quot;.equals(noticeContent.trim())">
        notice_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="noticeId != null">
        #{noticeId,jdbcType=INTEGER},
      </if>
      <if test="noticeOrganization != null and !&quot;&quot;.equals(noticeOrganization.trim())">
        #{noticeOrganization,jdbcType=VARCHAR},
      </if>
      <if test="noticeTime != null">
        #{noticeTime,jdbcType=DATE},
      </if>
      <if test="noticeContent != null and !&quot;&quot;.equals(noticeContent.trim())">
        #{noticeContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.uestc.managesystem.entity.model.Notice">
    update notice
    <set>
      <if test="noticeOrganization != null and !&quot;&quot;.equals(noticeOrganization.trim())">
        notice_organization = #{noticeOrganization,jdbcType=VARCHAR},
      </if>
      <if test="noticeTime != null">
        notice_time = #{noticeTime,jdbcType=DATE},
      </if>
      <if test="noticeContent != null and !&quot;&quot;.equals(noticeContent.trim())">
        notice_content = #{noticeContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where notice_ID = #{noticeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.uestc.managesystem.entity.model.Notice">
    update notice
    set notice_organization = #{noticeOrganization,jdbcType=VARCHAR},
      notice_time = #{noticeTime,jdbcType=DATE},
      notice_content = #{noticeContent,jdbcType=LONGVARCHAR}
    where notice_ID = #{noticeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.uestc.managesystem.entity.model.Notice">
    update notice
    set notice_organization = #{noticeOrganization,jdbcType=VARCHAR},
      notice_time = #{noticeTime,jdbcType=DATE}
    where notice_ID = #{noticeId,jdbcType=INTEGER}
  </update>
</mapper>